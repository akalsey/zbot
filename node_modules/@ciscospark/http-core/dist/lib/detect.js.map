{"version":3,"sources":["../../src/lib/detect.js"],"names":["detect","detectSync","buffer","resolve","b","window","Blob","type","ArrayBuffer","Uint8Array","Error","mime"],"mappings":";;;;;;;;;;;kBAYwBA,M;QAaRC,U,GAAAA,U;;AApBhB;;;;;;AAEA;;;;;AAKe,SAASD,MAAT,CAAgBE,MAAhB,EAAwB;AACrC,SAAO,sBAAY,UAACC,OAAD,EAAa;AAC9BA,YAAQF,WAAWC,MAAX,CAAR;AACD,GAFM,CAAP;AAGD,C,CAhBD;;;;;QAkBkBF,M,GAAVA,M;;AAER;;;;;;AAKO,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACjC;AACA,MAAIE,IAAIF,MAAR;AACA,MAAI,OAAOG,MAAP,gBAAJ,EAAmC;AACjC,QAAIH,kBAAkBI,IAAtB,EAA4B;AAC1B,aAAOJ,OAAOK,IAAd;AACD,KAFD,MAGK,IAAIL,kBAAkBM,WAAtB,EAAmC;AACtCJ,UAAI,IAAIK,UAAJ,CAAeP,MAAf,CAAJ;AACD,KAFI,MAGA,IAAI,EAAEA,kBAAkBO,UAApB,CAAJ,EAAqC;AACxC,YAAM,IAAIC,KAAJ,uEAAN;AACD;AACF;;AAED,MAAMH,OAAO,wBAASH,CAAT,CAAb;;AAEA,MAAI,CAACG,IAAL,EAAW;AACT;AACD;;AAED,SAAOA,KAAKI,IAAZ;AACD","file":"detect.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport fileType from 'file-type';\n\n/**\n * Determine mimeType for the specified buffer;\n * @param {Buffer} buffer\n * @returns {Promise<string>}\n */\nexport default function detect(buffer) {\n  return new Promise((resolve) => {\n    resolve(detectSync(buffer));\n  });\n}\n\nexport {detect as detect};\n\n/**\n * Synchronous implementation of {@link detect}\n * @param {Buffer} buffer\n * @returns {string}\n */\nexport function detectSync(buffer) {\n  /* global Blob */\n  let b = buffer;\n  if (typeof window !== `undefined`) {\n    if (buffer instanceof Blob) {\n      return buffer.type;\n    }\n    else if (buffer instanceof ArrayBuffer) {\n      b = new Uint8Array(buffer);\n    }\n    else if (!(buffer instanceof Uint8Array)) {\n      throw new Error(`\\`detect\\` requires a buffer of type Blob, ArrayBuffer, or Uint8Array`);\n    }\n  }\n\n  const type = fileType(b);\n\n  if (!type) {\n    return `application/octet-stream`;\n  }\n\n  return type.mime;\n}\n"]}