{"version":3,"sources":["../../src/request/index.js"],"names":["request","options","url","uri","headers","download","upload","intercept","interceptors","then","args","slice","reverse","key","res","successKey","errorKey","reduce","promise","interceptor","result","resolve","reason","reject"],"mappings":";;;;;;;;;;kBAYwBA,O;;AAPxB;;;;AACA;;;;AAEA;;;;AARA;;;;;AAYe,SAASA,OAAT,CAAiBC,OAAjB,EAA0B;AACvC,MAAIA,QAAQC,GAAZ,EAAiB;AACfD,YAAQE,GAAR,GAAcF,QAAQC,GAAtB;AACAD,YAAQC,GAAR,GAAc,IAAd;AACD;;AAEDD,UAAQG,OAAR,GAAkBH,QAAQG,OAAR,IAAmB,EAArC;;AAEAH,UAAQI,QAAR,GAAmB,0BAAnB;AACAJ,UAAQK,MAAR,GAAiB,0BAAjB;;AAEA,SAAOC,UAAUN,QAAQO,YAAlB,aACJC,IADI,CACC;AAAA,sCAAIC,IAAJ;AAAIA,UAAJ;AAAA;;AAAA,WAAa,oCAAST,OAAT,SAAqBS,IAArB,EAAb;AAAA,GADD,EAEJD,IAFI,CAEC;AAAA,uCAAIC,IAAJ;AAAIA,UAAJ;AAAA;;AAAA,WAAaH,4BAAUN,QAAQO,YAAR,CAAqBG,KAArB,GAA6BC,OAA7B,EAAV,qBAAiEF,IAAjE,EAAb;AAAA,GAFD,CAAP;;AAIA;;;;;;;AAOA,WAASH,SAAT,CAAmBC,YAAnB,EAAiCK,GAAjC,EAAsCC,GAAtC,EAA2C;AACzC,QAAMC,oBAAkBF,GAAxB;AACA,QAAMG,kBAAgBH,GAAhB,UAAN;;AAEA,WAAOL,aAAaS,MAAb,CAAoB,UAACC,OAAD,EAAUC,WAAV;AAAA,aAA0BD,QAAQT,IAAR,CACjD,UAACW,MAAD,EAAY;AACV,YAAID,YAAYJ,UAAZ,CAAJ,EAA6B;AAC3B,iBAAOI,YAAYJ,UAAZ,EAAwBd,OAAxB,EAAiCmB,MAAjC,CAAP;AACD;AACD,eAAO,kBAAQC,OAAR,CAAgBD,MAAhB,CAAP;AACD,OANgD,EAOjD,UAACE,MAAD,EAAY;AACV,YAAIH,YAAYH,QAAZ,CAAJ,EAA2B;AACzB,iBAAOG,YAAYH,QAAZ,EAAsBf,OAAtB,EAA+BqB,MAA/B,CAAP;AACD;AACD,eAAO,kBAAQC,MAAR,CAAeD,MAAf,CAAP;AACD,OAZgD,CAA1B;AAAA,KAApB,EAaF,kBAAQD,OAAR,CAAgBP,GAAhB,CAbE,CAAP;AAcD;AACF","file":"index.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport _request from './request';\nimport {EventEmitter} from 'events';\n\n/**\n * @param {Object} options\n * @returns {Promise}\n */\nexport default function request(options) {\n  if (options.url) {\n    options.uri = options.url;\n    options.url = null;\n  }\n\n  options.headers = options.headers || {};\n\n  options.download = new EventEmitter();\n  options.upload = new EventEmitter();\n\n  return intercept(options.interceptors, `Request`)\n    .then((...args) => _request(options, ...args))\n    .then((...args) => intercept(options.interceptors.slice().reverse(), `Response`, ...args));\n\n  /**\n   * @param {Array} interceptors\n   * @param {string} key\n   * @param {Object} res\n   * @private\n   * @returns {Promise}\n   */\n  function intercept(interceptors, key, res) {\n    const successKey = `on${key}`;\n    const errorKey = `on${key}Error`;\n\n    return interceptors.reduce((promise, interceptor) => promise.then(\n        (result) => {\n          if (interceptor[successKey]) {\n            return interceptor[successKey](options, result);\n          }\n          return Promise.resolve(result);\n        },\n        (reason) => {\n          if (interceptor[errorKey]) {\n            return interceptor[errorKey](options, reason);\n          }\n          return Promise.reject(reason);\n        }\n      ), Promise.resolve(res));\n  }\n}\n"]}