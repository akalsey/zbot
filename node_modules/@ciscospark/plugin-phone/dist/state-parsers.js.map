{"version":3,"sources":["../src/state-parsers.js"],"names":["activeParticipants","direction","isActive","isCall","joined","joinedOnThisDevice","mediaDirection","participantIsJoined","remoteParticipant","remoteParticipants","remoteAudioMuted","remoteVideoMuted","shouldRing","locus","participants","state","self","isCreator","fullState","filter","participant","type","length","Boolean","spark","device","url","deviceUrl","mediaType","status","toLowerCase","audioStatus","includes","videoStatus","event","data","eventType"],"mappings":";;;;;;;;;;QAcgBA,kB,GAAAA,kB;QAUAC,S,GAAAA,S;QAaAC,Q,GAAAA,Q;QAWAC,M,GAAAA,M;QAUAC,M,GAAAA,M;QAWAC,kB,GAAAA,kB;QAWAC,c,GAAAA,c;QAkBAC,mB,GAAAA,mB;QAUAC,iB,GAAAA,iB;QAUAC,kB,GAAAA,kB;QAUAC,gB,GAAAA,gB;QAUAC,gB,GAAAA,gB;QAWAC,U,GAAAA,U;;;;AA7IhB;;;;;;AAMO,SAASZ,kBAAT,CAA4Ba,KAA5B,EAAmC;AACxC,SAAO,sBAAOA,MAAMC,YAAb,EAA2B,EAACC,eAAD,EAA3B,CAAP;AACD;;AAED;;;;;;AAlBA;;;;;;AAwBO,SAASd,SAAT,CAAmBY,KAAnB,EAA0B;AAC/B,MAAI,CAACA,KAAD,IAAU,CAACA,MAAMG,IAArB,EAA2B;AACzB;AACD;AACD,SAAOH,MAAMG,IAAN,CAAWC,SAAX,eAAP;AACD;;AAED;;;;;;AAMO,SAASf,QAAT,CAAkBW,KAAlB,EAAyB;AAC9B,SAAOA,MAAMK,SAAN,CAAgBH,KAAhB,aAAP;AACD;;AAED;;;;;;;AAOO,SAASZ,MAAT,CAAgBU,KAAhB,EAAuB;AAC5B,SAAOA,MAAMC,YAAN,CAAmBK,MAAnB,CAA0B,UAACC,WAAD;AAAA,WAAiBA,YAAYC,IAAZ,WAAjB;AAAA,GAA1B,EAAwEC,MAAxE,KAAmF,CAA1F;AACD;;AAED;;;;;;AAMO,SAASlB,MAAT,CAAgBS,KAAhB,EAAuB;AAC5B,SAAOU,QAAQV,MAAMG,IAAN,IAAcT,oBAAoBM,MAAMG,IAA1B,CAAtB,CAAP;AACD;;AAED;;;;;;;AAOO,SAASX,kBAAT,CAA4BmB,KAA5B,EAAmCX,KAAnC,EAA0C;AAC/C,SAAOT,OAAOS,KAAP,KAAiBW,MAAMC,MAAN,CAAaC,GAAb,KAAqBb,MAAMG,IAAN,CAAWW,SAAxD;AACD;;AAED;;;;;;;AAOO,SAASrB,cAAT,CAAwBsB,SAAxB,EAAmCR,WAAnC,EAAgD;AACrD,MAAI,CAACA,WAAL,EAAkB;AAChB;AACD;;AAED,MAAI,CAACA,YAAYS,MAAjB,EAAyB;AACvB;AACD;;AAED,SAAO,CAACT,YAAYS,MAAZ,CAAsBD,SAAtB,0BAAD,EAAyDE,WAAzD,EAAP;AACD;;AAED;;;;;;AAMO,SAASvB,mBAAT,CAA6Ba,WAA7B,EAA0C;AAC/C,SAAOA,YAAYL,KAAZ,aAAP;AACD;;AAED;;;;;;AAMO,SAASP,iBAAT,CAA2BK,KAA3B,EAAkC;AACvC,SAAOJ,mBAAmBI,KAAnB,EAA0B,CAA1B,CAAP;AACD;;AAED;;;;;;AAMO,SAASJ,kBAAT,CAA4BI,KAA5B,EAAmC;AACxC,SAAOA,MAAMC,YAAN,CAAmBK,MAAnB,CAA0B,UAACC,WAAD;AAAA,WAAiBA,YAAYC,IAAZ,eAA+BD,YAAYM,GAAZ,KAAoBb,MAAMG,IAAN,CAAWU,GAA/E;AAAA,GAA1B,CAAP;AACD;;AAED;;;;;;AAMO,SAAShB,gBAAT,CAA0BU,WAA1B,EAAuC;AAC5C,SAAOb,oBAAoBa,WAApB,KAAoC,CAACA,YAAYS,MAAZ,CAAmBE,WAAnB,CAA+BC,QAA/B,QAA5C;AACD;;AAED;;;;;;AAMO,SAASrB,gBAAT,CAA0BS,WAA1B,EAAuC;AAC5C,SAAOb,oBAAoBa,WAApB,KAAoC,CAACA,YAAYS,MAAZ,CAAmBI,WAAnB,CAA+BD,QAA/B,QAA5C;AACD;;AAED;;;;;;;AAOO,SAASpB,UAAT,CAAoBsB,KAApB,EAA2BV,KAA3B,EAAkC;AACvC;AACA;AACA,SAAOU,MAAMC,IAAN,CAAWC,SAAX,mCAAuDjC,OAAO+B,MAAMC,IAAN,CAAWtB,KAAlB,CAAvD,IAAmF,CAACR,mBAAmB6B,MAAMC,IAAN,CAAWtB,KAA9B,EAAqCW,MAAMC,MAAN,CAAaC,GAAlD,CAA3F;AACD","file":"state-parsers.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {filter} from 'lodash';\n\n/**\n * Finds the Locus's active participants\n * @param {Types~Locus} locus\n * @private\n * @returns {Array<Types~LocusParticipant>}\n */\nexport function activeParticipants(locus) {\n  return filter(locus.participants, {state: `JOINED`});\n}\n\n/**\n * Indicates if the locus was activated form this device\n * @param {Types~Locus} locus\n * @private\n * @returns {string} unknown|in|out\n */\nexport function direction(locus) {\n  if (!locus || !locus.self) {\n    return `unknown`;\n  }\n  return locus.self.isCreator ? `out` : `in`;\n}\n\n/**\n * Indicates of the specifed locus is active\n * @param {Types~Locus} locus\n * @private\n * @returns {Boolean}\n */\nexport function isActive(locus) {\n  return locus.fullState.state === `ACTIVE`;\n}\n\n/**\n * Indicates if the specified locus represents a call (in other words, has\n * exactly two participants)\n * @param {Types~Locus} locus\n * @private\n * @returns {Boolean}\n */\nexport function isCall(locus) {\n  return locus.participants.filter((participant) => participant.type === `USER`).length === 2;\n}\n\n/**\n * Indicates if the current user has joined the Locus\n * @param {Types~Locus} locus\n * @private\n * @returns {Boolean}\n */\nexport function joined(locus) {\n  return Boolean(locus.self && participantIsJoined(locus.self));\n}\n\n/**\n * Indicates if this device has joined the locus\n * @param {ProxySpark} spark\n * @param {Types~Locus} locus\n * @private\n * @returns {Boolean}\n */\nexport function joinedOnThisDevice(spark, locus) {\n  return joined(locus) && spark.device.url === locus.self.deviceUrl;\n}\n\n/**\n * Indicates the direction of the specified media type for the specified\n * participant\n * @param {string} mediaType\n * @param {Types~LocusParticipant} participant\n * @returns {string} One of `sendonly`, `recvonly`, `sendrecv`, or `inactive`\n */\nexport function mediaDirection(mediaType, participant) {\n  if (!participant) {\n    return `inactive`;\n  }\n\n  if (!participant.status) {\n    return `inactive`;\n  }\n\n  return (participant.status[`${mediaType}Status`] || `inactive`).toLowerCase();\n}\n\n/**\n * Indicates if the specified participant has joined the Locus\n * @param {Types~LocusParticipant} participant\n * @private\n * @returns {Boolean}\n */\nexport function participantIsJoined(participant) {\n  return participant.state === `JOINED`;\n}\n\n/**\n * Finds the party in the call that is not the current user\n * @param {Types~Locus} locus\n * @private\n * @returns {Types~LocusParticipant}\n */\nexport function remoteParticipant(locus) {\n  return remoteParticipants(locus)[0];\n}\n\n/**\n * Finds all participants of the Locus that are not the current user\n * @param {Types~Locus} locus\n * @private\n * @returns {Types~LocusParticipant}\n */\nexport function remoteParticipants(locus) {\n  return locus.participants.filter((participant) => participant.type === `USER` && participant.url !== locus.self.url);\n}\n\n/**\n * Indicates if the remote party is sending audio\n * @param {Types~LocusParticipant} participant\n * @private\n * @returns {Boolean}\n */\nexport function remoteAudioMuted(participant) {\n  return participantIsJoined(participant) && !participant.status.audioStatus.includes(`SEND`);\n}\n\n/**\n * Indicates if the remote party is sending video\n * @param {Types~LocusParticipant} participant\n * @private\n * @returns {Boolean}\n */\nexport function remoteVideoMuted(participant) {\n  return participantIsJoined(participant) && !participant.status.videoStatus.includes(`SEND`);\n}\n\n/**\n * Indicates if the `call:incoming` event should be fired for the specified Locus\n * @param {Types~MercuryEvent} event Event which delivered the Locus\n * @param {ProxySpark} spark\n * @private\n * @returns {Boolean}\n */\nexport function shouldRing(event, spark) {\n  // FIXME this is not correct, but it's the best i've got until locus gets back\n  // to me\n  return event.data.eventType === `locus.participant_joined` && isCall(event.data.locus) && !joinedOnThisDevice(event.data.locus, spark.device.url);\n}\n"]}