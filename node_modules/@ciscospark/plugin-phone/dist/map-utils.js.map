{"version":3,"sources":["../src/map-utils.js"],"names":["addToSet","set","value","add","getMapFromMap","map","key","childMap","get","getSetFromMap","getWeakMapFromMap","getMappedWeakMappedSet","m","mk","wk","addToMappedWeakMappedSet","v"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAQO,IAAMA,8BAAW,qBAAM,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC5CD,MAAIE,GAAJ,CAAQD,KAAR;AACD,CAFuB,CAAjB,C,CARP;;;;;;AAYO,IAAME,wCAAgB,qBAAM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/C,MAAIC,WAAWF,IAAIG,GAAJ,CAAQF,GAAR,CAAf;AACA,MAAI,CAACC,QAAL,EAAe;AACbA,eAAW,mBAAX;AACAF,QAAIJ,GAAJ,CAAQK,GAAR,EAAaC,QAAb;AACD;AACD,SAAOA,QAAP;AACD,CAP4B,CAAtB;;AASA,IAAME,wCAAgB,qBAAM,UAACJ,GAAD,EAAMC,GAAN,EAAc;AAC/C,MAAIL,MAAMI,IAAIG,GAAJ,CAAQF,GAAR,CAAV;AACA,MAAI,CAACL,GAAL,EAAU;AACRA,UAAM,mBAAN;AACAI,QAAIJ,GAAJ,CAAQK,GAAR,EAAaL,GAAb;AACD;AACD,SAAOA,GAAP;AACD,CAP4B,CAAtB;;AASA,IAAMS,gDAAoB,qBAAM,UAACL,GAAD,EAAMC,GAAN,EAAc;AACnD,MAAIC,WAAWF,IAAIG,GAAJ,CAAQF,GAAR,CAAf;AACA,MAAI,CAACC,QAAL,EAAe;AACbA,eAAW,uBAAX;AACAF,QAAIJ,GAAJ,CAAQK,GAAR,EAAaC,QAAb;AACD;AACD,SAAOA,QAAP;AACD,CAPgC,CAA1B;;AASP;AACA;;AAEO,IAAMI,0DAAyB,qBAAM,UAACC,CAAD,EAAIC,EAAJ,EAAQC,EAAR,EAAe;AACzD,MAAMT,MAAMK,kBAAkBE,CAAlB,EAAqBC,EAArB,CAAZ;AACA,MAAMZ,MAAMQ,cAAcJ,GAAd,EAAmBS,EAAnB,CAAZ;AACA,SAAOb,GAAP;AACD,CAJqC,CAA/B;;AAMA,IAAMc,8DAA2B,qBAAM,UAACH,CAAD,EAAIC,EAAJ,EAAQC,EAAR,EAAYE,CAAZ,EAAkB;AAC9D,MAAMX,MAAMK,kBAAkBE,CAAlB,EAAqBC,EAArB,CAAZ;AACA,MAAMZ,MAAMQ,cAAcJ,GAAd,EAAmBS,EAAnB,CAAZ;AACAd,WAASC,GAAT,EAAce,CAAd;AACD,CAJuC,CAAjC","file":"map-utils.js","sourcesContent":["/**!\n *\n * Copyright (c) 2016 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {curry} from 'lodash';\n\nexport const addToSet = curry((set, value) => {\n  set.add(value);\n});\n\nexport const getMapFromMap = curry((map, key) => {\n  let childMap = map.get(key);\n  if (!childMap) {\n    childMap = new Map();\n    map.set(key, childMap);\n  }\n  return childMap;\n});\n\nexport const getSetFromMap = curry((map, key) => {\n  let set = map.get(key);\n  if (!set) {\n    set = new Set();\n    map.set(key, set);\n  }\n  return set;\n});\n\nexport const getWeakMapFromMap = curry((map, key) => {\n  let childMap = map.get(key);\n  if (!childMap) {\n    childMap = new WeakMap();\n    map.set(key, childMap);\n  }\n  return childMap;\n});\n\n// I'm pretty sure there should be a functional way to chain the following\n// functions, but I can't figure out what it is.\n\nexport const getMappedWeakMappedSet = curry((m, mk, wk) => {\n  const map = getWeakMapFromMap(m, mk);\n  const set = getSetFromMap(map, wk);\n  return set;\n});\n\nexport const addToMappedWeakMappedSet = curry((m, mk, wk, v) => {\n  const map = getWeakMapFromMap(m, mk);\n  const set = getSetFromMap(map, wk);\n  addToSet(set, v);\n});\n"]}