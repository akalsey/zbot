'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addToMappedWeakMappedSet = exports.getMappedWeakMappedSet = exports.getWeakMapFromMap = exports.getSetFromMap = exports.getMapFromMap = exports.addToSet = undefined;

var _weakMap = require('babel-runtime/core-js/weak-map');

var _weakMap2 = _interopRequireDefault(_weakMap);

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

var _curry = require('lodash/curry');

var _curry2 = _interopRequireDefault(_curry);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var addToSet = exports.addToSet = (0, _curry2.default)(function (set, value) {
  set.add(value);
}); /**!
     *
     * Copyright (c) 2016 Cisco Systems, Inc. See LICENSE file.
     * @private
     */

var getMapFromMap = exports.getMapFromMap = (0, _curry2.default)(function (map, key) {
  var childMap = map.get(key);
  if (!childMap) {
    childMap = new _map2.default();
    map.set(key, childMap);
  }
  return childMap;
});

var getSetFromMap = exports.getSetFromMap = (0, _curry2.default)(function (map, key) {
  var set = map.get(key);
  if (!set) {
    set = new _set2.default();
    map.set(key, set);
  }
  return set;
});

var getWeakMapFromMap = exports.getWeakMapFromMap = (0, _curry2.default)(function (map, key) {
  var childMap = map.get(key);
  if (!childMap) {
    childMap = new _weakMap2.default();
    map.set(key, childMap);
  }
  return childMap;
});

// I'm pretty sure there should be a functional way to chain the following
// functions, but I can't figure out what it is.

var getMappedWeakMappedSet = exports.getMappedWeakMappedSet = (0, _curry2.default)(function (m, mk, wk) {
  var map = getWeakMapFromMap(m, mk);
  var set = getSetFromMap(map, wk);
  return set;
});

var addToMappedWeakMappedSet = exports.addToMappedWeakMappedSet = (0, _curry2.default)(function (m, mk, wk, v) {
  var map = getWeakMapFromMap(m, mk);
  var set = getSetFromMap(map, wk);
  addToSet(set, v);
});
//# sourceMappingURL=map-utils.js.map
