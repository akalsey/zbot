{"version":3,"sources":["../src/spark-core.js"],"names":["ProxySpark","registerPlugin","constructorCalled","derived","children","Spark","interceptors","SparkTrackingIdInterceptor","create","RequestLoggerInterceptor","process","env","ENABLE_NETWORK_LOGGING","ENABLE_VERBOSE_NETWORK_LOGGING","undefined","ResponseLoggerInterceptor","RequestTimingInterceptor","UrlInterceptor","AuthInterceptor","PayloadTransformerInterceptor","ConversationInterceptor","RedirectInterceptor","HttpStatusInterceptor","error","NetworkTimingInterceptor","preInterceptors","postInterceptors","SparkCore","extend","boundedStorage","deps","fn","unboundedStorage","session","config","type","request","setOnce","sessionId","authenticate","credentials","authorize","refresh","transform","direction","object","predicates","payloadTransformer","filter","p","ctx","spark","all","map","test","then","shouldTransform","extract","target","name","data","d","Boolean","reduce","promise","alias","applyNamedTransform","resolve","rest","unshift","args","transforms","tx","initialize","forEach","key","listenTo","trigger","addInterceptor","ints","interceptor","push","includes","json","v4","logout","measure","metrics","sendUnstructured","upload","options","file","reject","Error","phases","finalize","method","withCredentials","body","headers","authorization","shunt","_uploadPhaseInitialize","_uploadPhaseUpload","_uploadPhaseFinalize","res","logger","debug","_uploadApplySession","opts","phaseOptions","phaseKey","startsWith","substr","NODE_ENV","on","event","log","loaded","total","makeSparkConstructor","constructor","message","console","warn","replace","proxies","concat"],"mappings":"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","file":"spark-core.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {proxyEvents, retry, transferEvents} from '@ciscospark/common';\nimport {HttpStatusInterceptor, defaults as requestDefaults} from '@ciscospark/http-core';\nimport {defaults, get, has, isFunction, isString, last, merge, omit} from 'lodash';\nimport AmpState from 'ampersand-state';\nimport NetworkTimingInterceptor from './interceptors/network-timing';\nimport PayloadTransformerInterceptor from './interceptors/payload-transformer';\nimport RedirectInterceptor from './interceptors/redirect';\nimport RequestLoggerInterceptor from './interceptors/request-logger';\nimport RequestTimingInterceptor from './interceptors/request-timing';\nimport ResponseLoggerInterceptor from './interceptors/response-logger';\nimport SparkHttpError from './lib/spark-http-error';\nimport SparkTrackingIdInterceptor from './interceptors/spark-tracking-id';\nimport config from './config';\nimport {makeSparkStore} from './lib/storage';\nimport uuid from 'uuid';\nimport {EventEmitter} from 'events';\n\nlet constructorCalled = false;\nconst derived = {};\nexport const children = {};\n\nlet Spark;\n\nconst interceptors = {\n  SparkTrackingIdInterceptor: SparkTrackingIdInterceptor.create,\n  /* eslint no-extra-parens: [0] */\n  RequestLoggerInterceptor: (process.env.ENABLE_NETWORK_LOGGING || process.env.ENABLE_VERBOSE_NETWORK_LOGGING) ? RequestLoggerInterceptor.create : undefined,\n  ResponseLoggerInterceptor: (process.env.ENABLE_NETWORK_LOGGING || process.env.ENABLE_VERBOSE_NETWORK_LOGGING) ? ResponseLoggerInterceptor.create : undefined,\n  RequestTimingInterceptor: RequestTimingInterceptor.create,\n  UrlInterceptor: undefined,\n  AuthInterceptor: undefined,\n  PayloadTransformerInterceptor: PayloadTransformerInterceptor.create,\n  ConversationInterceptor: undefined,\n  RedirectInterceptor: RedirectInterceptor.create,\n  HttpStatusInterceptor() {\n    return HttpStatusInterceptor.create({\n      error: SparkHttpError\n    });\n  },\n  NetworkTimingInterceptor: NetworkTimingInterceptor.create\n};\n\nconst preInterceptors = [\n  `ResponseLoggerInterceptor`,\n  `RequestTimingInterceptor`,\n  `SparkTrackingIdInterceptor`\n];\n\nconst postInterceptors = [\n  `HttpStatusInterceptor`,\n  `NetworkTimingInterceptor`,\n  `RequestLoggerInterceptor`\n];\n\nconst SparkCore = AmpState.extend({\n  derived: {\n    boundedStorage: {\n      deps: [],\n      fn() {\n        return makeSparkStore(`bounded`, this);\n      }\n    },\n    unboundedStorage: {\n      deps: [],\n      fn() {\n        return makeSparkStore(`unbounded`, this);\n      }\n    }\n  },\n\n  session: {\n    config: {\n      type: `object`\n    },\n    request: {\n      setOnce: true,\n      // It's supposed to be a function, but that's not a type defined in\n      // Ampersand\n      type: `any`\n    },\n    sessionId: {\n      setOnce: true,\n      type: `string`\n    }\n  },\n\n  authenticate(...args) {\n    return this.credentials.authenticate(...args);\n  },\n\n  authorize(...args) {\n    return this.credentials.authorize(...args);\n  },\n\n  refresh(...args) {\n    return this.credentials.refresh(...args);\n  },\n\n  /**\n   * Applies the directionally appropriate transforms to the specified object\n   * @param {string} direction\n   * @param {Object} object\n   * @returns {Promise}\n   */\n  transform(direction, object) {\n    const predicates = this.config.payloadTransformer.predicates.filter((p) => !p.direction || p.direction === direction);\n    const ctx = {\n      spark: this\n    };\n    return Promise.all(predicates.map((p) => p.test(ctx, object)\n      .then((shouldTransform) => {\n        if (!shouldTransform) {\n          return undefined;\n        }\n        return p.extract(object)\n          // eslint-disable-next-line max-nested-callbacks\n          .then((target) => ({\n            name: p.name,\n            target\n          }));\n      })))\n      .then((data) => data\n        .filter((d) => Boolean(d))\n        // eslint-disable-next-line max-nested-callbacks\n        .reduce((promise, {name, target, alias}) => promise.then(() => {\n          if (alias) {\n            return this.applyNamedTransform(direction, alias, target);\n          }\n          return this.applyNamedTransform(direction, name, target);\n        }), Promise.resolve()))\n      .then(() => object);\n  },\n\n  /**\n   * Applies the directionally appropriate transform to the specified parameters\n   * @param {string} direction\n   * @param {Object} ctx\n   * @param {string} name\n   * @returns {Promise}\n   */\n  applyNamedTransform(direction, ctx, name, ...rest) {\n    if (isString(ctx)) {\n      rest.unshift(name);\n      name = ctx;\n      ctx = {\n        spark: this,\n        transform: (...args) => this.applyNamedTransform(direction, ctx, ...args)\n      };\n    }\n\n    const transforms = ctx.spark.config.payloadTransformer.transforms.filter((tx) => tx.name === name && (!tx.direction || tx.direction === direction));\n    // too many implicit returns on the same line is difficult to interpret\n    // eslint-disable-next-line arrow-body-style\n    return transforms.reduce((promise, tx) => promise.then(() => {\n      if (tx.alias) {\n        return ctx.transform(tx.alias, ...rest);\n      }\n      return Promise.resolve(tx.fn(ctx, ...rest));\n    }), Promise.resolve())\n      .then(() => last(rest));\n  },\n\n  initialize() {\n    this.config = merge({}, config, this.config);\n\n    // Make nested events propagate in a consistent manner\n    Object.keys(children).forEach((key) => {\n      this.listenTo(this[key], `change`, (...args) => {\n        args.unshift(`change:${key}`);\n        this.trigger(...args);\n      });\n    });\n\n    const addInterceptor = (ints, key) => {\n      const interceptor = interceptors[key];\n\n      if (!isFunction(interceptor)) {\n        return ints;\n      }\n\n      ints.push(Reflect.apply(interceptor, this, []));\n\n      return ints;\n    };\n\n    let ints = [];\n    ints = preInterceptors.reduce(addInterceptor, ints);\n    ints = Object.keys(interceptors).filter((key) => !(preInterceptors.includes(key) || postInterceptors.includes(key))).reduce(addInterceptor, ints);\n    ints = postInterceptors.reduce(addInterceptor, ints);\n\n    this.request = requestDefaults({\n      json: true,\n      interceptors: ints\n    });\n\n    let sessionId = `${get(this, `config.trackingIdPrefix`, `spark-js-sdk`)}_${get(this, `config.trackingIdBase`, uuid.v4())}`;\n    if (has(this, `config.trackingIdPrefix`)) {\n      sessionId += `_${get(this, `config.trackingIdPrefix`)}`;\n    }\n\n    this.sessionId = sessionId;\n  },\n\n  logout(...args) {\n    return this.credentials.logout(...args);\n  },\n\n  /**\n   * General purpose wrapper to submit metrics via the metrics plugin (if the\n   * metrics plugin is installed)\n   * @returns {Promise}\n   */\n  measure(...args) {\n    if (this.metrics) {\n      return this.metrics.sendUnstructured(...args);\n    }\n\n    return Promise.resolve();\n  },\n\n  upload(options) {\n    if (!options.file) {\n      return Promise.reject(new Error(`\\`options.file\\` is required`));\n    }\n\n    options.phases = options.phases || {};\n    options.phases.initialize = options.phases.initialize || {};\n    options.phases.upload = options.phases.upload || {};\n    options.phases.finalize = options.phases.finalize || {};\n\n    defaults(options.phases.initialize, {\n      method: `POST`\n    }, omit(options, `file`, `phases`));\n\n    defaults(options.phases.upload, {\n      method: `PUT`,\n      json: false,\n      withCredentials: false,\n      body: options.file,\n      headers: {\n        'x-trans-id': uuid.v4(),\n        authorization: undefined\n      }\n    });\n\n    defaults(options.phases.finalize, {\n      method: `POST`\n    }, omit(options, `file`, `phases`));\n\n    const shunt = new EventEmitter();\n\n    const promise = this._uploadPhaseInitialize(options)\n      .then(() => {\n        const p = this._uploadPhaseUpload(options);\n        transferEvents(`progress`, p, shunt);\n        return p;\n      })\n      .then((...args) => this._uploadPhaseFinalize(options, ...args))\n      .then((res) => res.body);\n\n    proxyEvents(shunt, promise);\n\n    return promise;\n  },\n\n  _uploadPhaseInitialize: function _uploadPhaseInitialize(options) {\n    this.logger.debug(`client: initiating upload session`);\n\n    return this.request(options.phases.initialize)\n      .then((...args) => this._uploadApplySession(options, ...args))\n      .then((res) => {\n        this.logger.debug(`client: initiated upload session`);\n        return res;\n      });\n  },\n\n  _uploadApplySession(options, res) {\n    const session = res.body;\n    [`upload`, `finalize`].reduce((opts, key) => {\n      opts[key] = Object.keys(opts[key]).reduce((phaseOptions, phaseKey) => {\n        if (phaseKey.startsWith(`$`)) {\n          phaseOptions[phaseKey.substr(1)] = phaseOptions[phaseKey](session);\n          Reflect.deleteProperty(phaseOptions, phaseKey);\n        }\n\n        return phaseOptions;\n      }, opts[key]);\n\n      return opts;\n    }, options.phases);\n  },\n\n  @retry\n  _uploadPhaseUpload(options) {\n    this.logger.debug(`client: uploading file`);\n\n    const promise = this.request(options.phases.upload)\n      .then((res) => {\n        this.logger.debug(`client: uploaded file`);\n        return res;\n      });\n\n    proxyEvents(options.phases.upload.upload, promise);\n\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV === `test`) {\n      promise.on(`progress`, (event) => {\n        this.logger.log(`upload progress`, event.loaded, event.total);\n      });\n    }\n\n    return promise;\n  },\n\n  _uploadPhaseFinalize: function _uploadPhaseFinalize(options) {\n    this.logger.debug(`client: finalizing upload session`);\n\n    return this.request(options.phases.finalize)\n      .then((res) => {\n        this.logger.debug(`client: finalized upload session`);\n        return res;\n      });\n  }\n});\n\n/**\n * @returns {undefined}\n */\nfunction makeSparkConstructor() {\n  Spark = SparkCore.extend({\n    children,\n    derived\n  });\n}\n\n/**\n * @param {Object} attrs\n * @param {Object} attrs.credentials\n * @param {Object} attrs.config\n * @returns {Spark}\n */\nexport default function ProxySpark(...args) {\n  if (!Spark) {\n    makeSparkConstructor();\n  }\n\n  constructorCalled = true;\n\n  const spark = new Spark(...args);\n  return spark;\n}\n\n/**\n * @method registerPlugin\n * @param {string} name\n * @param {function} constructor\n * @param {Object} options\n * @param {Array<string>} options.proxies\n * @param {Object} options.interceptors\n * @returns {null}\n */\nexport function registerPlugin(name, constructor, options) {\n  /* eslint complexity: [0] */\n  if (constructorCalled) {\n    const message = `registerPlugin() should not be called after instantiating a Spark instance`;\n    // eslint-disable-next-line no-console\n    console.warn(message);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== `production`) {\n      throw new Error(message);\n    }\n  }\n\n  options = options || {};\n\n  if (!children[name] || options.replace) {\n    children[name] = constructor;\n\n    if (options.proxies) {\n      options.proxies.forEach((key) => {\n        derived[key] = {\n          deps: [`${name}.${key}`],\n          fn() {\n            return this[name][key];\n          }\n        };\n      });\n    }\n\n    if (options.interceptors) {\n      Object.keys(options.interceptors).forEach((key) => {\n        interceptors[key] = options.interceptors[key];\n      });\n    }\n\n    if (options.config) {\n      merge(config, options.config);\n    }\n\n    if (has(options, `payloadTransformer.predicates`)) {\n      config.payloadTransformer.predicates = config.payloadTransformer.predicates.concat(get(options, `payloadTransformer.predicates`));\n    }\n\n    if (has(options, `payloadTransformer.transforms`)) {\n      config.payloadTransformer.transforms = config.payloadTransformer.transforms.concat(get(options, `payloadTransformer.transforms`));\n    }\n\n    makeSparkConstructor();\n  }\n}\n"]}