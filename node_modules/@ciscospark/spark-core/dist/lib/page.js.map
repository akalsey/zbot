{"version":3,"sources":["../../src/lib/page.js"],"names":["itemsMap","linksMap","sparksMap","Page","get","items","length","res","spark","set","body","parseLinkHeaders","headers","link","getLink","hasLink","request","uri","links","then","Boolean","i","next","value","done","linkHeaders","Array","isArray","reduce","linkHeader","split","replace","rel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMA,IAAMA,WAAW,uBAAjB;AACA,IAAMC,WAAW,uBAAjB;AACA,IAAMC,YAAY,uBAAlB;;AAEA;;;;IAGqBC,I;;;;AACnB;;;wBAGY;AACV,aAAOH,SAASI,GAAT,CAAa,IAAb,CAAP;AACD;;AAED;;;;;;wBAGa;AACX,aAAO,KAAKC,KAAL,CAAWC,MAAlB;AACD;;AAED;;;;;;;wBAIY;AACV,aAAOL,SAASG,GAAT,CAAa,IAAb,CAAP;AACD;;AAED;;;;;;;wBAIY;AACV,aAAOF,UAAUE,GAAV,CAAc,IAAd,CAAP;AACD;;AAED;;;;;;;;;AAMA,gBAAYG,GAAZ,EAAiBC,KAAjB,EAAwB;AAAA;;AACtBR,aAASS,GAAT,CAAa,IAAb,EAAmBF,IAAIG,IAAJ,CAASL,KAA5B;AACAJ,aAASQ,GAAT,CAAa,IAAb,EAAmBN,KAAKQ,gBAAL,CAAsBJ,IAAIK,OAAJ,CAAYC,IAAlC,CAAnB;AACAX,cAAUO,GAAV,CAAc,IAAd,EAAoBD,KAApB;;AAEA,WAAO,IAAP;AACD;;AAED;;;;;;;;;;;;AAyBA;;;;2BAIO;AACL,aAAO,KAAKM,OAAL,QAAP;AACD;;AAED;;;;;;;8BAIU;AACR,aAAO,KAAKC,OAAL,QAAP;AACD;;AAED;;;;;;;+BAIW;AACT,aAAO,KAAKD,OAAL,YAAP;AACD;;AAED;;;;;;;kCAIc;AACZ,aAAO,KAAKC,OAAL,YAAP;AACD;;AAED;;;;;;;;;4BAMQF,I,EAAM;AAAA;;AACZ,aAAO,KAAKL,KAAL,CAAWQ,OAAX,CAAmB;AACxBC,aAAK,KAAKC,KAAL,CAAWL,IAAX;AADmB,OAAnB,EAGJM,IAHI,CAGC,UAACZ,GAAD;AAAA,eAAS,IAAIJ,IAAJ,CAASI,GAAT,EAAc,MAAKC,KAAnB,CAAT;AAAA,OAHD,CAAP;AAID;;AAED;;;;;;;;;4BAMQK,I,EAAM;AACZ,aAAOO,QAAQ,KAAKF,KAAL,CAAWL,IAAX,CAAR,CAAP;AACD;;AAED;;;;;;;4BAIoB;AAAA;;AAClB,UAAIQ,IAAI,CAAC,CAAT;AACA,aAAO;AACLC,cAAM,gBAAM;AACVD,eAAK,CAAL;AACA,cAAIA,IAAI,OAAKf,MAAb,EAAqB;AACnB,mBAAO;AACLiB,qBAAO,OAAKlB,KAAL,CAAWgB,CAAX;AADF,aAAP;AAGD;;AAED,iBAAO,EAACG,MAAM,IAAP,EAAP;AACD;AAVI,OAAP;AAYD;;;qCA5FuBC,W,EAAa;AACnC,UAAI,CAACA,WAAL,EAAkB;AAChB,eAAO,EAAP;AACD;;AAEDA,oBAAcC,MAAMC,OAAN,CAAcF,WAAd,IAA6BA,WAA7B,GAA2C,CAACA,WAAD,CAAzD;AACA,aAAOA,YAAYG,MAAZ,CAAmB,UAACV,KAAD,EAAQW,UAAR,EAAuB;AAC/CA,qBAAaA,WAAWC,KAAX,KAAb;AACA,YAAMjB,OAAOgB,WAAW,CAAX,EACVE,OADU,UAEVA,OAFU,SAAb;AAGA,YAAMC,MAAMH,WAAW,CAAX,EACTC,KADS,MACE,CADF,EAETC,OAFS,CAED,IAFC,KAAZ;AAGAb,cAAMc,GAAN,IAAanB,IAAb;AACA,eAAOK,KAAP;AACD,OAVM,EAUJ,EAVI,CAAP;AAWD;;;;;kBApEkBf,I","file":"page.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nconst itemsMap = new WeakMap();\nconst linksMap = new WeakMap();\nconst sparksMap = new WeakMap();\n\n/**\n * @class Page\n */\nexport default class Page {\n  /**\n   * @type {Array}\n   */\n  get items() {\n    return itemsMap.get(this);\n  }\n\n  /**\n   * @type {number}\n   */\n  get length() {\n    return this.items.length;\n  }\n\n  /**\n   * @private\n   * @type {Object}\n   */\n  get links() {\n    return linksMap.get(this);\n  }\n\n  /**\n   * @private\n   * @type {ProxySpark}\n   */\n  get spark() {\n    return sparksMap.get(this);\n  }\n\n  /**\n   * @constructs {Page}\n   * @param {HttpResponse} res\n   * @param {ProxySpark} spark\n   * @returns {Page}\n   */\n  constructor(res, spark) {\n    itemsMap.set(this, res.body.items);\n    linksMap.set(this, Page.parseLinkHeaders(res.headers.link));\n    sparksMap.set(this, spark);\n\n    return this;\n  }\n\n  /**\n   * Separate a single link header string into an actionable object\n   * @param {string} linkHeaders\n   * @private\n   * @returns {Object}\n   */\n  static parseLinkHeaders(linkHeaders) {\n    if (!linkHeaders) {\n      return {};\n    }\n\n    linkHeaders = Array.isArray(linkHeaders) ? linkHeaders : [linkHeaders];\n    return linkHeaders.reduce((links, linkHeader) => {\n      linkHeader = linkHeader.split(`;`);\n      const link = linkHeader[0]\n        .replace(`<`, ``)\n        .replace(`>`, ``);\n      const rel = linkHeader[1]\n        .split(`=`)[1]\n        .replace(/\"/g, ``);\n      links[rel] = link;\n      return links;\n    }, {});\n  }\n\n  /**\n   * Get next page\n   * @returns {Function}\n   */\n  next() {\n    return this.getLink(`next`);\n  }\n\n  /**\n   * Indicates if there's another page\n   * @returns {Boolean}\n   */\n  hasNext() {\n    return this.hasLink(`next`);\n  }\n\n  /**\n   * Get previous page\n   * @returns {Page}\n   */\n  previous() {\n    return this.getLink(`previous`);\n  }\n\n  /**\n   * Indicates if there is a previous Page\n   * @returns {Boolean}\n   */\n  hasPrevious() {\n    return this.hasLink(`previous`);\n  }\n\n  /**\n   * Retrieves the `Page` at url specified by `link`\n   * @param {string} link Specifies which link header to return\n   * @private\n   * @returns {Promise<Page>}\n   */\n  getLink(link) {\n    return this.spark.request({\n      uri: this.links[link]\n    })\n      .then((res) => new Page(res, this.spark));\n  }\n\n  /**\n   * Indicates if the specified link is in the link header\n   * @param {string} link\n   * @private\n   * @returns {Boolean}\n   */\n  hasLink(link) {\n    return Boolean(this.links[link]);\n  }\n\n  /**\n   * Iterator\n   * @returns {Object}\n   */\n  [Symbol.iterator]() {\n    let i = -1;\n    return {\n      next: () => {\n        i += 1;\n        if (i < this.length) {\n          return {\n            value: this.items[i]\n          };\n        }\n\n        return {done: true};\n      }\n    };\n  }\n}\n"]}