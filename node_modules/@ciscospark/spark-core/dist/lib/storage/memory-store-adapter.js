'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _errors = require('./errors');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  bind: function bind(namespace, options) {
    options = options || {};
    if (!namespace) {
      return _promise2.default.reject(new Error('`namespace` is required'));
    }

    if (!options.logger) {
      return _promise2.default.reject(new Error('`options.logger` is required'));
    }

    var logger = options.logger;

    var map = new _map2.default();
    logger.info('memory-store-adapter: returning binding');
    return _promise2.default.resolve({
      del: function del(key) {
        logger.info('memory-store-adapter: deleting `' + key + '`');
        return _promise2.default.resolve(map.delete(key));
      },
      get: function get(key) {
        logger.info('memory-store-adapter: reading `' + key + '`');
        var res = map.get(key);
        if (typeof res === 'undefined') {
          return _promise2.default.reject(new _errors.NotFoundError());
        }

        return _promise2.default.resolve(res);
      },
      put: function put(key, value) {
        logger.info('memory-store-adapter: writing `' + key + '`');
        return _promise2.default.resolve(map.set(key, value));
      }
    });
  }
}; /**!
    *
    * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.
    * @private
    */
//# sourceMappingURL=memory-store-adapter.js.map
