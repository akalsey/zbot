{"version":3,"sources":["../../src/plugins/logger.js"],"names":["precedence","error","warn","info","debug","trace","wrapConsoleMethod","level","impls","slice","console","pop","bind","Logger","extend","namespace","log"],"mappings":";;;;;;AAMA;;;;AACA;;;;AAPA;;;;;;AASA,IAAMA,aAAa;AACjBC,SAAO,OADU;AAEjBC,QAAM,gBAFW;AAGjBC,QAAM,OAHW;AAIjBC,SAAO,eAJU;AAKjBC,SAAO;AALU,CAAnB;;AAQA;;;;;;;AAOA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC;AACA,MAAIC,QAAQR,WAAWO,KAAX,CAAZ;AACA,MAAIC,KAAJ,EAAW;AACTA,YAAQA,MAAMC,KAAN,EAAR;AACA,WAAO,CAACC,QAAQH,KAAR,CAAR,EAAwB;AACtBA,cAAQC,MAAMG,GAAN,EAAR;AACD;AACF;;AAED,SAAOD,QAAQH,KAAR,EAAeK,IAAf,CAAoBF,OAApB,CAAP;AACD;;AAED,IAAMG,SAAS,sBAAYC,MAAZ,CAAmB;AAChCC,qBADgC;AAEhCd,SAAOK,0BAFyB;AAGhCJ,QAAMI,yBAH0B;AAIhCU,OAAKV,wBAJ2B;AAKhCH,QAAMG,yBAL0B;AAMhCF,SAAOE,0BANyB;AAOhCD,SAAOC;AAPyB,CAAnB,CAAf;;AAUA,yCAAyBO,MAAzB;;kBAEeA,M","file":"logger.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport SparkPlugin from '../lib/spark-plugin';\nimport {registerPlugin} from '../spark-core';\n\nconst precedence = {\n  error: [`log`],\n  warn: [`error`, `log`],\n  info: [`log`],\n  debug: [`info`, `log`],\n  trace: [`debug`, `info`, `log`]\n};\n\n/**\n * Assigns the specified console method to Logger; uses `precedence` to fallback\n * to other console methods if the current environment doesn't provide the\n * specified level.\n * @param {string} level\n * @returns {Function}\n */\nfunction wrapConsoleMethod(level) {\n  /* eslint no-console: [0] */\n  let impls = precedence[level];\n  if (impls) {\n    impls = impls.slice();\n    while (!console[level]) {\n      level = impls.pop();\n    }\n  }\n\n  return console[level].bind(console);\n}\n\nconst Logger = SparkPlugin.extend({\n  namespace: `Logger`,\n  error: wrapConsoleMethod(`error`),\n  warn: wrapConsoleMethod(`warn`),\n  log: wrapConsoleMethod(`log`),\n  info: wrapConsoleMethod(`info`),\n  debug: wrapConsoleMethod(`debug`),\n  trace: wrapConsoleMethod(`trace`)\n});\n\nregisterPlugin(`logger`, Logger);\n\nexport default Logger;\n"]}