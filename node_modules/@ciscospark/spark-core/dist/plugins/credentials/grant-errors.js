'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperties = require('babel-runtime/core-js/object/define-properties');

var _defineProperties2 = _interopRequireDefault(_defineProperties);

var _extendError = require('extend-error');

var _extendError2 = _interopRequireDefault(_extendError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OAuthError = (0, _extendError2.default)({
  parseFn: function parseFn(res) {
    (0, _defineProperties2.default)(this, {
      error: {
        enumerable: true,
        value: res.body.error
      },
      errorDescription: {
        enumerable: true,
        value: res.body.error_description
      },
      errorUri: {
        enumerable: true,
        value: res.body.error_uri
      },
      res: {
        enumerable: false,
        value: res
      }
    });

    return this.errorDescription;
  },
  subTypeName: 'OAuthError'
}); /**!
     *
     * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.
     * @private
     */

/* eslint camelcase: [0] */

var InvalidRequestError = (0, _extendError2.default)(OAuthError, 'InvalidRequestError');
var InvalidClientError = (0, _extendError2.default)(OAuthError, 'InvalidClientError');
var InvalidGrantError = (0, _extendError2.default)(OAuthError, 'InvalidGrantError');
var UnauthorizedClientError = (0, _extendError2.default)(OAuthError, 'UnauthorizedClientError');
var UnsupportGrantTypeError = (0, _extendError2.default)(OAuthError, 'UnsupportGrantTypeError');
var InvalidScopeError = (0, _extendError2.default)(OAuthError, 'InvalidScopeError');

var errors = {
  OAuthError: OAuthError,
  InvalidRequestError: InvalidRequestError,
  InvalidClientError: InvalidClientError,
  InvalidGrantError: InvalidGrantError,
  UnauthorizedClientError: UnauthorizedClientError,
  UnsupportGrantTypeError: UnsupportGrantTypeError,
  InvalidScopeError: InvalidScopeError,
  invalid_request: InvalidRequestError,
  invalid_client: InvalidClientError,
  invalid_grant: InvalidGrantError,
  unauthorized_client: UnauthorizedClientError,
  unsupported_grant_type: UnsupportGrantTypeError,
  invalid_scope: InvalidScopeError,
  select: function select(errorString) {
    return errors[errorString] || OAuthError;
  }
};

exports.default = errors;
//# sourceMappingURL=grant-errors.js.map
