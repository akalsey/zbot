{"version":3,"sources":["../../../../src/plugins/credentials/credentials/browser.js"],"names":["noop","Credentials","extend","authorize","options","logger","info","isAuthenticated","force","resolve","set","canRefresh","code","name","orgId","password","arguments","state","csrf_token","_generateSecurityToken","_isAuthenticating","config","clientType","initiateAuthorizationCodeGrant","initiateImplicitGrant","reject","Error","vars","key","baseVar","window","location","buildOAuthUrl","response_type","initialize","process","nextTick","parse","href","query","_updateLocation","spark","authenticate","access_token","_extractTokenInfo","hash","includes","substr","logout","then","buildLogoutUrl","tokenKeys","fromBase64url","_verifySecurityToken","token","expires_in","parseInt","refresh_token_expires_in","auth","_pushAuthorization","length","toBase64Url","stringify","v4","sessionStorage","setItem","_token","getItem","removeItem","format","history","replaceState"],"mappings":"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","file":"browser.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\n/* eslint-env browser */\n\nimport {base64} from '@ciscospark/common';\nimport {oneFlight} from '@ciscospark/common';\nimport {assign, clone, has, omit, pick} from 'lodash';\nimport querystring from 'querystring';\nimport url from 'url';\nimport uuid from 'uuid';\nimport Authorization from '../authorization';\nimport common from './common';\nimport {persist, waitForValue} from '../../../lib/storage';\nimport SparkPlugin from '../../../lib/spark-plugin';\n\n/**\n * @private\n * @returns {undefined}\n */\nfunction noop() {/* eslint no-empty:[0] */}\n\nconst Credentials = SparkPlugin.extend(Object.assign({}, common, {\n  @oneFlight\n  @waitForValue(`authorization`)\n  authorize(options) {\n    /* eslint complexity: [0] */\n    /* eslint camelcase: [0] */\n    /* eslint no-invalid-this: [0] */\n\n    this.logger.info(`credentials(shim): authenticating`);\n\n    options = options || {};\n    if (this.isAuthenticated && !options.force) {\n      this.logger.info(`credentials(shim): authentication not expired, not authenticating`);\n      return Promise.resolve();\n    }\n\n    this.set(pick(options, `name`, `orgId`, `password`));\n    if (this.canRefresh || options.code || this.name && this.orgId && this.password) {\n      /* eslint prefer-rest-params: [0] */\n      return Reflect.apply(common.authorize, this, arguments);\n    }\n\n    options.state = options.state || {};\n    options.state.csrf_token = options.state.csrf_token || this._generateSecurityToken();\n\n    this._isAuthenticating = true;\n    switch (this.config.clientType) {\n    case `confidential`:\n      return this.initiateAuthorizationCodeGrant(options);\n    case `public`:\n      return this.initiateImplicitGrant(options);\n    default:\n      return Promise.reject(new Error(`config.credentials.clientType must be defined`));\n    }\n  },\n\n  initiateImplicitGrant(options) {\n    const vars = {\n      'oauth.client_id': `CLIENT_ID`,\n      'oauth.redirect_uri': `REDIRECT_URI`,\n      'oauth.scope': `SCOPE`\n    };\n\n    for (const key in vars) {\n      if (!has(this.config, key)) {\n        const baseVar = vars[key];\n        return Promise.reject(new Error(`config.credentials.${key} or CISCOSPARK_${baseVar} or COMMON_IDENTITY_${baseVar} or ${baseVar} must be defined`));\n      }\n    }\n\n    this.logger.info(`credentials(shim): initiating implicit grant flow`);\n\n    /* eslint camelcase: [0] */\n    window.location = this.buildOAuthUrl(assign({response_type: `token`}, options));\n\n    // Return an unreasolved promise to suppress console errors.\n    return new Promise(noop);\n  },\n\n  initiateAuthorizationCodeGrant(options) {\n    const vars = {\n      'oauth.client_id': `CLIENT_ID`,\n      'oauth.client_secret': `CLIENT_SECRET`,\n      'oauth.redirect_uri': `REDIRECT_URI`,\n      'oauth.scope': `SCOPE`\n    };\n\n    for (const key in vars) {\n      if (!has(this.config, key)) {\n        const baseVar = vars[key];\n        return Promise.reject(new Error(`config.credentials.${key} or CISCOSPARK_${baseVar} or COMMON_IDENTITY_${baseVar} or ${baseVar} must be defined`));\n      }\n    }\n\n    this.logger.info(`credentials(shim): initiating authorization code grant flow`);\n\n    window.location = this.buildOAuthUrl(assign({response_type: `code`}, options));\n    return new Promise(noop);\n  },\n\n  @persist(`authorization`)\n  @persist(`clientAuthorization`)\n  initialize() {\n    // AmpersandState is a little weird about initialization order. Code that\n    // depends on this.config needs to run after SparkCore#initialize executes,\n    // so, we'll use process.nextTick to run the following block on the next\n    // execution cycle.\n    process.nextTick(() => {\n      const location = url.parse(window.location.href, true);\n\n      let query = clone(location.query);\n\n      if (query.code) {\n        Reflect.deleteProperty(location.query, `code`);\n        Reflect.deleteProperty(location.query, `state`);\n\n        this._updateLocation(location);\n\n        // Though initialize is a synchronous call, it should be safe to\n        // call authenticate() because it'll get called again later but end\n        // up cached via oneFlight.\n        // Call spark.authenticate to make sure we trigger a device refresh.\n        return this.spark.authenticate(query);\n      }\n\n      if (query.access_token) {\n        location.query = this._extractTokenInfo(query);\n        this._updateLocation(location);\n        return Promise.resolve(noop);\n      }\n\n      let hash = location.hash || ``;\n      if (hash.includes(`#`)) {\n        hash = hash.substr(1);\n      }\n\n      query = querystring.parse(hash);\n      if (query.access_token) {\n        location.hash = this._extractTokenInfo(query);\n        this._updateLocation(location);\n      }\n\n      return Promise.resolve();\n    });\n  },\n\n  logout() {\n    this.logger.info(`credentials(shim): logging out`);\n\n    /* eslint prefer-rest-params: [0] */\n    return Reflect.apply(common.logout, this, arguments)\n      .then(() => {\n        window.location = this.buildLogoutUrl();\n      });\n  },\n\n  _extractTokenInfo(query) {\n    const tokenKeys = [\n      `access_token`,\n      `expires_in`,\n      `token_type`,\n      `refresh_token`,\n      `refresh_token_expires_in`\n    ];\n\n    query.state = querystring.parse(base64.fromBase64url(query.state));\n\n    this._verifySecurityToken(query.state.csrf_token);\n\n    const token = pick(query, tokenKeys);\n    token.expires_in = parseInt(token.expires_in, 10);\n    token.refresh_token_expires_in = parseInt(token.refresh_token_expires_in, 10);\n    const auth = new Authorization(token);\n    this._pushAuthorization(auth);\n\n    query = omit(query, tokenKeys);\n    query.state = omit(query.state, `csrf_token`);\n    if (Object.keys(query.state).length === 0) {\n      Reflect.deleteProperty(query, `state`);\n    }\n    else {\n      query.state = base64.toBase64Url(querystring.stringify(query.state));\n    }\n\n    return query;\n  },\n\n  _generateSecurityToken() {\n    this.logger.info(`credentials(shim): generating csrf token`);\n\n    const token = uuid.v4();\n    sessionStorage.setItem(`oauth2-csrf-token`, token);\n    return token;\n  },\n\n  _verifySecurityToken(token) {\n    this.logger.info(`credentials(shim): verifying csrf token`);\n\n    const _token = sessionStorage.getItem(`oauth2-csrf-token`);\n    sessionStorage.removeItem(`oauth2-csrf-token`);\n\n    if (token !== _token) {\n      throw new Error(`CSRF token ${token} does not match stored token ${_token}`);\n    }\n  },\n\n  _updateLocation(location) {\n    if (typeof location !== `string`) {\n      if (location.query) {\n        Reflect.deleteProperty(location, `search`);\n      }\n      if (typeof location.hash !== `string`) {\n        location.hash = querystring.stringify(location.hash);\n      }\n      location = url.format(location);\n    }\n\n    this.logger.info(`credentials(shim): updating browser location`, location);\n    // It's pretty unlikely the SDK will be used in a browser that doesn't\n    // support the history API, so we'll just ignore the cases where it's not\n    // available.\n    if (window.history && window.history.replaceState) {\n      window.history.replaceState({}, null, location);\n    }\n  }\n}));\n\nexport default Credentials;\n"]}