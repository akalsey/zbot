{"version":3,"sources":["../../../src/plugins/credentials/grant-errors.js"],"names":["OAuthError","parseFn","res","error","enumerable","value","body","errorDescription","error_description","errorUri","error_uri","subTypeName","InvalidRequestError","InvalidClientError","InvalidGrantError","UnauthorizedClientError","UnsupportGrantTypeError","InvalidScopeError","errors","invalid_request","invalid_client","invalid_grant","unauthorized_client","unsupported_grant_type","invalid_scope","select","errorString"],"mappings":";;;;;;;;;;AAQA;;;;;;AAEA,IAAMA,aAAa,2BAAY;AAC7BC,WAAS,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC7B,oCAAwB,IAAxB,EAA8B;AAC5BC,aAAO;AACLC,oBAAY,IADP;AAELC,eAAOH,IAAII,IAAJ,CAASH;AAFX,OADqB;AAK5BI,wBAAkB;AAChBH,oBAAY,IADI;AAEhBC,eAAOH,IAAII,IAAJ,CAASE;AAFA,OALU;AAS5BC,gBAAU;AACRL,oBAAY,IADJ;AAERC,eAAOH,IAAII,IAAJ,CAASI;AAFR,OATkB;AAa5BR,WAAK;AACHE,oBAAY,KADT;AAEHC,eAAOH;AAFJ;AAbuB,KAA9B;;AAmBA,WAAO,KAAKK,gBAAZ;AACD,GAtB4B;AAuB7BI;AAvB6B,CAAZ,CAAnB,C,CAVA;;;;;;AAMA;;AA8BA,IAAMC,sBAAsB,2BAAYZ,UAAZ,wBAA5B;AACA,IAAMa,qBAAqB,2BAAYb,UAAZ,uBAA3B;AACA,IAAMc,oBAAoB,2BAAYd,UAAZ,sBAA1B;AACA,IAAMe,0BAA0B,2BAAYf,UAAZ,4BAAhC;AACA,IAAMgB,0BAA0B,2BAAYhB,UAAZ,4BAAhC;AACA,IAAMiB,oBAAoB,2BAAYjB,UAAZ,sBAA1B;;AAEA,IAAMkB,SAAS;AACblB,wBADa;AAEbY,0CAFa;AAGbC,wCAHa;AAIbC,sCAJa;AAKbC,kDALa;AAMbC,kDANa;AAObC,sCAPa;AAQbE,mBAAiBP,mBARJ;AASbQ,kBAAgBP,kBATH;AAUbQ,iBAAeP,iBAVF;AAWbQ,uBAAqBP,uBAXR;AAYbQ,0BAAwBP,uBAZX;AAabQ,iBAAeP,iBAbF;AAcbQ,QAda,kBAcNC,WAdM,EAcO;AAClB,WAAOR,OAAOQ,WAAP,KAAuB1B,UAA9B;AACD;AAhBY,CAAf;;kBAmBekB,M","file":"grant-errors.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\n/* eslint camelcase: [0] */\n\nimport extendError from 'extend-error';\n\nconst OAuthError = extendError({\n  parseFn: function parseFn(res) {\n    Object.defineProperties(this, {\n      error: {\n        enumerable: true,\n        value: res.body.error\n      },\n      errorDescription: {\n        enumerable: true,\n        value: res.body.error_description\n      },\n      errorUri: {\n        enumerable: true,\n        value: res.body.error_uri\n      },\n      res: {\n        enumerable: false,\n        value: res\n      }\n    });\n\n    return this.errorDescription;\n  },\n  subTypeName: `OAuthError`\n});\n\nconst InvalidRequestError = extendError(OAuthError, `InvalidRequestError`);\nconst InvalidClientError = extendError(OAuthError, `InvalidClientError`);\nconst InvalidGrantError = extendError(OAuthError, `InvalidGrantError`);\nconst UnauthorizedClientError = extendError(OAuthError, `UnauthorizedClientError`);\nconst UnsupportGrantTypeError = extendError(OAuthError, `UnsupportGrantTypeError`);\nconst InvalidScopeError = extendError(OAuthError, `InvalidScopeError`);\n\nconst errors = {\n  OAuthError,\n  InvalidRequestError,\n  InvalidClientError,\n  InvalidGrantError,\n  UnauthorizedClientError,\n  UnsupportGrantTypeError,\n  InvalidScopeError,\n  invalid_request: InvalidRequestError,\n  invalid_client: InvalidClientError,\n  invalid_grant: InvalidGrantError,\n  unauthorized_client: UnauthorizedClientError,\n  unsupported_grant_type: UnsupportGrantTypeError,\n  invalid_scope: InvalidScopeError,\n  select(errorString) {\n    return errors[errorString] || OAuthError;\n  }\n};\n\nexport default errors;\n"]}