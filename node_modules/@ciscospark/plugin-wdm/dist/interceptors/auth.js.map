{"version":3,"sources":["../../src/interceptors/auth.js"],"names":["DeviceAuthInterceptor","options","uri","includes","spark","config","credentials","tokenUrl","oauth","resolve","authorizeUrl","samlUrl","service","device","isService","isServiceUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AAEA;;;IAGqBA,qB;;;;;;;;;;;;AASnB;AACA;AACA;AACA;;;;wCAIoBC,O,EAAS;AAC3B,UAAIA,QAAQC,GAAR,CAAYC,QAAZ,CAAqB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8BC,QAA9B,IAA0C,KAAKH,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8BE,KAA9B,CAAoCD,QAAnG,CAAJ,EAAkH;AAChH,eAAO,kBAAQE,OAAR,CAAgB,KAAhB,CAAP;AACD;;AAED,UAAIR,QAAQC,GAAR,CAAYC,QAAZ,CAAqB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8BI,YAA9B,IAA8C,KAAKN,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8BE,KAA9B,CAAoCE,YAAvG,CAAJ,EAA0H;AACxH,eAAO,kBAAQD,OAAR,CAAgB,KAAhB,CAAP;AACD;;AAED,UAAIR,QAAQC,GAAR,CAAYC,QAAZ,CAAqB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8BK,OAAnD,CAAJ,EAAiE;AAC/D,eAAO,kBAAQF,OAAR,CAAgB,KAAhB,CAAP;AACD;;AAED,UAAIR,QAAQW,OAAR,IAAmB,KAAKR,KAAL,CAAWS,MAAX,CAAkBC,SAAlB,CAA4Bb,QAAQW,OAApC,CAAvB,EAAqE;AACnE,eAAO,kBAAQH,OAAR,CAAgB,IAAhB,CAAP;AACD;;AAED,UAAIR,QAAQC,GAAR,IAAe,KAAKE,KAAL,CAAWS,MAAX,CAAkBE,YAAlB,CAA+Bd,QAAQC,GAAvC,CAAnB,EAAgE;AAC9D,eAAO,kBAAQO,OAAR,CAAgB,IAAhB,CAAP;AACD;;AAED,aAAO,kBAAQA,OAAR,CAAgB,KAAhB,CAAP;AACD;AACD;;;;;AAtCA;;;6BAGgB;AACd;AACA,aAAO,IAAIT,qBAAJ,CAA0B,EAACI,OAAO,IAAR,EAA1B,CAAP;AACD;;;+BAjBH;;;;;kBAUqBJ,qB","file":"auth.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {AuthInterceptor} from '@ciscospark/spark-core';\n\n/**\n * @class\n */\nexport default class DeviceAuthInterceptor extends AuthInterceptor {\n  /**\n   * @returns {DeviceAuthInterceptor}\n   */\n  static create() {\n    /* eslint no-invalid-this: [0] */\n    return new DeviceAuthInterceptor({spark: this});\n  }\n\n  // it's an if-tree, splitting it up into more functions makes it more\n  // difficult to interpet, not less\n  /* eslint-disable complexity */\n  /**\n   * @param {Object} options\n   * @returns {Promise<boolean>}\n   */\n  requiresCredentials(options) {\n    if (options.uri.includes(this.spark.config.credentials.tokenUrl || this.spark.config.credentials.oauth.tokenUrl)) {\n      return Promise.resolve(false);\n    }\n\n    if (options.uri.includes(this.spark.config.credentials.authorizeUrl || this.spark.config.credentials.oauth.authorizeUrl)) {\n      return Promise.resolve(false);\n    }\n\n    if (options.uri.includes(this.spark.config.credentials.samlUrl)) {\n      return Promise.resolve(false);\n    }\n\n    if (options.service && this.spark.device.isService(options.service)) {\n      return Promise.resolve(true);\n    }\n\n    if (options.uri && this.spark.device.isServiceUrl(options.uri)) {\n      return Promise.resolve(true);\n    }\n\n    return Promise.resolve(false);\n  }\n  /* eslint-enable complexity */\n}\n"]}