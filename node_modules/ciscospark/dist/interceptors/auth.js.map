{"version":3,"sources":["../../src/interceptors/auth.js"],"names":["CiscoSparkAuthInterceptor","options","uri","includes","spark","config","hydraServiceUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;;AAEA;;;;IAIqBA,yB;;;;;;;;;;;;AASnB;;;;wCAIoBC,O,EAAS;AAC3B,UAAIA,QAAQC,GAAR,CAAYC,QAAZ,CAAqB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,eAAvC,CAAJ,EAA6D;AAC3D,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;;;;AAlBD;;;6BAGgB;AACd;AACA,aAAO,IAAIN,yBAAJ,CAA8B,EAACI,OAAO,IAAR,EAA9B,CAAP;AACD;;;+BAnBH;;;;;;kBAYqBJ,yB","file":"auth.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {AuthInterceptor} from '@ciscospark/spark-core';\n\n/**\n * @class CiscoSparkAuthInterceptor\n * @private\n */\nexport default class CiscoSparkAuthInterceptor extends AuthInterceptor {\n  /**\n   * @returns {CiscoSparkAuthInterceptor}\n   */\n  static create() {\n    /* eslint no-invalid-this: [0] */\n    return new CiscoSparkAuthInterceptor({spark: this});\n  }\n\n  /**\n   * @param {Object} options\n   * @returns {boolean}\n   */\n  requiresCredentials(options) {\n    if (options.uri.includes(this.spark.config.hydraServiceUrl)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"]}